//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace wpfData_Step_4.ServiceReferenceSnacks {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="CityList", Namespace="http://schemas.datacontract.org/2004/07/Model", ItemName="City")]
    [System.SerializableAttribute()]
    public class CityList : System.Collections.Generic.List<wpfData_Step_4.ServiceReferenceSnacks.City> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="City", Namespace="http://schemas.datacontract.org/2004/07/Model")]
    [System.SerializableAttribute()]
    public partial class City : wpfData_Step_4.ServiceReferenceSnacks.BaseEntity {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CityName {
            get {
                return this.CityNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CityNameField, value) != true)) {
                    this.CityNameField = value;
                    this.RaisePropertyChanged("CityName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseEntity", Namespace="http://schemas.datacontract.org/2004/07/Model")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(wpfData_Step_4.ServiceReferenceSnacks.User))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(wpfData_Step_4.ServiceReferenceSnacks.Snack))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(wpfData_Step_4.ServiceReferenceSnacks.City))]
    public partial class BaseEntity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/Model")]
    [System.SerializableAttribute()]
    public partial class User : wpfData_Step_4.ServiceReferenceSnacks.BaseEntity {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private wpfData_Step_4.ServiceReferenceSnacks.City CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsAdminField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private wpfData_Step_4.ServiceReferenceSnacks.SnackList MySnacksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public wpfData_Step_4.ServiceReferenceSnacks.City City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsAdmin {
            get {
                return this.IsAdminField;
            }
            set {
                if ((this.IsAdminField.Equals(value) != true)) {
                    this.IsAdminField = value;
                    this.RaisePropertyChanged("IsAdmin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public wpfData_Step_4.ServiceReferenceSnacks.SnackList MySnacks {
            get {
                return this.MySnacksField;
            }
            set {
                if ((object.ReferenceEquals(this.MySnacksField, value) != true)) {
                    this.MySnacksField = value;
                    this.RaisePropertyChanged("MySnacks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Snack", Namespace="http://schemas.datacontract.org/2004/07/Model")]
    [System.SerializableAttribute()]
    public partial class Snack : wpfData_Step_4.ServiceReferenceSnacks.BaseEntity {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CalAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GramsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsSweetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LikeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SnackNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((this.AmountField.Equals(value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CalAmount {
            get {
                return this.CalAmountField;
            }
            set {
                if ((this.CalAmountField.Equals(value) != true)) {
                    this.CalAmountField = value;
                    this.RaisePropertyChanged("CalAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Grams {
            get {
                return this.GramsField;
            }
            set {
                if ((this.GramsField.Equals(value) != true)) {
                    this.GramsField = value;
                    this.RaisePropertyChanged("Grams");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSweet {
            get {
                return this.IsSweetField;
            }
            set {
                if ((this.IsSweetField.Equals(value) != true)) {
                    this.IsSweetField = value;
                    this.RaisePropertyChanged("IsSweet");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Like {
            get {
                return this.LikeField;
            }
            set {
                if ((this.LikeField.Equals(value) != true)) {
                    this.LikeField = value;
                    this.RaisePropertyChanged("Like");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SnackName {
            get {
                return this.SnackNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SnackNameField, value) != true)) {
                    this.SnackNameField = value;
                    this.RaisePropertyChanged("SnackName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="SnackList", Namespace="http://schemas.datacontract.org/2004/07/Model", ItemName="Snack")]
    [System.SerializableAttribute()]
    public class SnackList : System.Collections.Generic.List<wpfData_Step_4.ServiceReferenceSnacks.Snack> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="UserList", Namespace="http://schemas.datacontract.org/2004/07/Model", ItemName="User")]
    [System.SerializableAttribute()]
    public class UserList : System.Collections.Generic.List<wpfData_Step_4.ServiceReferenceSnacks.User> {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReferenceSnacks.IServiceSnack")]
    public interface IServiceSnack {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceSnack/GetAllCities", ReplyAction="http://tempuri.org/IServiceSnack/GetAllCitiesResponse")]
        wpfData_Step_4.ServiceReferenceSnacks.CityList GetAllCities();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceSnack/GetAllCities", ReplyAction="http://tempuri.org/IServiceSnack/GetAllCitiesResponse")]
        System.Threading.Tasks.Task<wpfData_Step_4.ServiceReferenceSnacks.CityList> GetAllCitiesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceSnack/GetAllUsers", ReplyAction="http://tempuri.org/IServiceSnack/GetAllUsersResponse")]
        wpfData_Step_4.ServiceReferenceSnacks.UserList GetAllUsers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceSnack/GetAllUsers", ReplyAction="http://tempuri.org/IServiceSnack/GetAllUsersResponse")]
        System.Threading.Tasks.Task<wpfData_Step_4.ServiceReferenceSnacks.UserList> GetAllUsersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceSnack/GetAllSnacks", ReplyAction="http://tempuri.org/IServiceSnack/GetAllSnacksResponse")]
        wpfData_Step_4.ServiceReferenceSnacks.SnackList GetAllSnacks();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceSnack/GetAllSnacks", ReplyAction="http://tempuri.org/IServiceSnack/GetAllSnacksResponse")]
        System.Threading.Tasks.Task<wpfData_Step_4.ServiceReferenceSnacks.SnackList> GetAllSnacksAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceSnack/GetSnacksByUser", ReplyAction="http://tempuri.org/IServiceSnack/GetSnacksByUserResponse")]
        wpfData_Step_4.ServiceReferenceSnacks.SnackList GetSnacksByUser(wpfData_Step_4.ServiceReferenceSnacks.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceSnack/GetSnacksByUser", ReplyAction="http://tempuri.org/IServiceSnack/GetSnacksByUserResponse")]
        System.Threading.Tasks.Task<wpfData_Step_4.ServiceReferenceSnacks.SnackList> GetSnacksByUserAsync(wpfData_Step_4.ServiceReferenceSnacks.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceSnack/GetUsersBySnack", ReplyAction="http://tempuri.org/IServiceSnack/GetUsersBySnackResponse")]
        wpfData_Step_4.ServiceReferenceSnacks.UserList GetUsersBySnack(wpfData_Step_4.ServiceReferenceSnacks.Snack snack);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceSnack/GetUsersBySnack", ReplyAction="http://tempuri.org/IServiceSnack/GetUsersBySnackResponse")]
        System.Threading.Tasks.Task<wpfData_Step_4.ServiceReferenceSnacks.UserList> GetUsersBySnackAsync(wpfData_Step_4.ServiceReferenceSnacks.Snack snack);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceSnack/Login", ReplyAction="http://tempuri.org/IServiceSnack/LoginResponse")]
        wpfData_Step_4.ServiceReferenceSnacks.User Login(wpfData_Step_4.ServiceReferenceSnacks.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceSnack/Login", ReplyAction="http://tempuri.org/IServiceSnack/LoginResponse")]
        System.Threading.Tasks.Task<wpfData_Step_4.ServiceReferenceSnacks.User> LoginAsync(wpfData_Step_4.ServiceReferenceSnacks.User user);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceSnackChannel : wpfData_Step_4.ServiceReferenceSnacks.IServiceSnack, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceSnackClient : System.ServiceModel.ClientBase<wpfData_Step_4.ServiceReferenceSnacks.IServiceSnack>, wpfData_Step_4.ServiceReferenceSnacks.IServiceSnack {
        
        public ServiceSnackClient() {
        }
        
        public ServiceSnackClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceSnackClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceSnackClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceSnackClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public wpfData_Step_4.ServiceReferenceSnacks.CityList GetAllCities() {
            return base.Channel.GetAllCities();
        }
        
        public System.Threading.Tasks.Task<wpfData_Step_4.ServiceReferenceSnacks.CityList> GetAllCitiesAsync() {
            return base.Channel.GetAllCitiesAsync();
        }
        
        public wpfData_Step_4.ServiceReferenceSnacks.UserList GetAllUsers() {
            return base.Channel.GetAllUsers();
        }
        
        public System.Threading.Tasks.Task<wpfData_Step_4.ServiceReferenceSnacks.UserList> GetAllUsersAsync() {
            return base.Channel.GetAllUsersAsync();
        }
        
        public wpfData_Step_4.ServiceReferenceSnacks.SnackList GetAllSnacks() {
            return base.Channel.GetAllSnacks();
        }
        
        public System.Threading.Tasks.Task<wpfData_Step_4.ServiceReferenceSnacks.SnackList> GetAllSnacksAsync() {
            return base.Channel.GetAllSnacksAsync();
        }
        
        public wpfData_Step_4.ServiceReferenceSnacks.SnackList GetSnacksByUser(wpfData_Step_4.ServiceReferenceSnacks.User user) {
            return base.Channel.GetSnacksByUser(user);
        }
        
        public System.Threading.Tasks.Task<wpfData_Step_4.ServiceReferenceSnacks.SnackList> GetSnacksByUserAsync(wpfData_Step_4.ServiceReferenceSnacks.User user) {
            return base.Channel.GetSnacksByUserAsync(user);
        }
        
        public wpfData_Step_4.ServiceReferenceSnacks.UserList GetUsersBySnack(wpfData_Step_4.ServiceReferenceSnacks.Snack snack) {
            return base.Channel.GetUsersBySnack(snack);
        }
        
        public System.Threading.Tasks.Task<wpfData_Step_4.ServiceReferenceSnacks.UserList> GetUsersBySnackAsync(wpfData_Step_4.ServiceReferenceSnacks.Snack snack) {
            return base.Channel.GetUsersBySnackAsync(snack);
        }
        
        public wpfData_Step_4.ServiceReferenceSnacks.User Login(wpfData_Step_4.ServiceReferenceSnacks.User user) {
            return base.Channel.Login(user);
        }
        
        public System.Threading.Tasks.Task<wpfData_Step_4.ServiceReferenceSnacks.User> LoginAsync(wpfData_Step_4.ServiceReferenceSnacks.User user) {
            return base.Channel.LoginAsync(user);
        }
    }
}
